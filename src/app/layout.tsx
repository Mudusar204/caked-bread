// "use client";
// import type { Metadata } from "next";
// import { Inter, Exo } from "next/font/google";
// import "./globals.css";
// import toast, { Toaster } from "react-hot-toast";

// import Navbar from "../components/navbar";
// const inter = Inter({ subsets: ["latin"] });
// const exo = Exo({ subsets: ["latin"], weight: "700" });
// import { http, createConfig, createStorage, cookieStorage } from "wagmi";
// import { mainnet, sepolia } from "wagmi/chains";
// import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
// const chains = [mainnet, sepolia] as const;

// // const config = createConfig({
// //   chains: [mainnet, sepolia],
// //   transports: {
// //     [mainnet.id]: http(),
// //     [sepolia.id]: http(),
// //   },
// // });
// import { WagmiProvider } from "wagmi";
// import { defaultWagmiConfig } from "@web3modal/wagmi/react/config";
// import { createWeb3Modal } from "@web3modal/wagmi/react";
// // Get projectId at https://cloud.walletconnect.com
// export const projectId = process.env.NEXT_PUBLIC_PROJECT_ID;
// if (!projectId) throw new Error("Project ID is not defined");
// const metadata = {
//   name: "Web3Modal",
//   description: "Web3Modal Example",
//   url: "https://web3modal.com", // origin must match your domain & subdomain
//   icons: ["https://avatars.githubusercontent.com/u/37784886"],
// };
// const config = defaultWagmiConfig({
//   chains,
//   projectId,
//   metadata,
//   storage: createStorage({
//     storage: cookieStorage,
//   }),
//   enableWalletConnect: true,
//   enableInjected: true,
//   enableEIP6963: true,
//   enableCoinbase: true,
// });
// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };
// const queryClient = new QueryClient();
// createWeb3Modal({
//   wagmiConfig: config,
//   projectId,
//   enableAnalytics: true, // Optional - defaults to your Cloud configuration
//   enableOnramp: true, // Optional - false as default
// });
// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={exo.className} style={{ background: "#f0e8ca" }}>
//         <main className="home">
//           <WagmiProvider config={config}>
//             <QueryClientProvider client={queryClient}>
//               <Toaster />
//               <Navbar />
//               {children}
//             </QueryClientProvider>
//           </WagmiProvider>
//         </main>
//       </body>
//     </html>
//   );
// }

import "./globals.css";
import type { Metadata } from "next";
import { headers } from "next/headers";

import { cookieToInitialState } from "wagmi";

import { config } from "../config/wagmiConfig";
import Web3ModalProvider from "../config/web3ModalProvider";

import { Inter, Exo } from "next/font/google";
import toast, { Toaster } from "react-hot-toast";

import Navbar from "../components/navbar";
const inter = Inter({ subsets: ["latin"] });
const exo = Exo({ subsets: ["latin"], weight: "700" });
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const initialState = cookieToInitialState(config, headers().get("cookie"));
  return (
    <html lang="en">
      <body className={exo.className} style={{ background: "#f0e8ca" }}>
        <main className="home">
          <Web3ModalProvider initialState={initialState}>
            <Toaster />
            <Navbar />
            {children}
          </Web3ModalProvider>
        </main>
      </body>
    </html>
  );
}
